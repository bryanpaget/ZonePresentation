name: Deploy Marp Slides to GitHub Pages

on:
  push:
    branches: [ main ]
    paths: 
      - 'slides.md'
      - 'marp-config.yml'
      - '*.png'
  pull_request:
    branches: [ main ]
    paths: 
      - 'slides.md'
      - 'marp-config.yml'
      - '*.png'

# Set permissions for the job
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli
        
      - name: Clean public directory
        run: |
          rm -rf public
          mkdir -p public
        
      - name: Convert Markdown to HTML
        run: |
          marp slides.md --html -o public/index.html --config-file marp-config.yml --allow-local-files
          echo "HTML conversion completed"
        
      - name: Convert Markdown to PDF
        run: |
          marp slides.md --pdf -o public/slides.pdf --config-file marp-config.yml --allow-local-files
          echo "PDF conversion completed"
        
      - name: Copy images to public directory
        run: |
          cp *.png public/ 2>/dev/null || true
          echo "Images copied"
        
      - name: Verify generated files
        run: |
          echo "Generated files:"
          ls -la public/
          if [ ! -f "public/index.html" ]; then
            echo "Error: index.html not generated"
            exit 1
          fi
          if [ ! -f "public/slides.pdf" ]; then
            echo "Error: slides.pdf not generated"
            exit 1
          fi
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment Status
        if: always()
        run: |
          echo "Deployment status: ${{ job.status }}"
          echo "Visit your site at: ${{ steps.deployment.outputs.page_url }}"
